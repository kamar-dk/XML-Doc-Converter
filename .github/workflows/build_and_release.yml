name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x' # Adjust to your project's .NET version

    - name: Restore dependencies
      run: dotnet restore

    # Build WPF for Windows
    - name: Build WPF for Windows
      run: dotnet publish XmlDocConverter/XmlDocConverter.csproj -c Release -r win-x64 --self-contained

    # Build Console for Windows
    - name: Build Console for Windows
      run: dotnet publish XmlDocConverterConsole/XmlDocConverterConsole.csproj -c Release -r win-x64 --self-contained

    # Build Console for Linux
    - name: Build for Linux
      run: dotnet publish XmlDocConverterConsole/XmlDocConverterConsole.csproj -c Release -r linux-x64 --self-contained 

    # Build Console for macOS
    - name: Build for macOS
      run: dotnet publish XmlDocConverterConsole/XmlDocConverterConsole.csproj -c Release -r osx-x64 --self-contained

    # Verify the output directories
    - name: Verify Windows WPF Build Output
      run: ls -R XmlDocConverter/bin/Release

    - name: Verify Windows Console Build Output
      run: ls -R XmlDocConverterConsole/bin/Release

    - name: Verify Linux Build Output
      run: ls -R XmlDocConverterConsole/bin/Release

    - name: Verify macOS Build Output
      run: ls -R XmlDocConverterConsole/bin/Release

    # Package all builds
    - name: Package
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        mkdir -p release

        # Windows WPF
        mkdir -p release/windows-wpf
        cp -r XmlDocConverter/bin/Release/net7.0-windows/win-x64/publish/* release/windows-wpf/
        mv release/windows-wpf release/XML_Documentation_Converter-${TAG_NAME}-win-wpf
        cd release
        zip -r XML_Documentation_Converter-${TAG_NAME}-win-wpf.zip XML_Documentation_Converter-${TAG_NAME}-win-wpf
        cd ..

        # Windows Console
        mkdir -p release/windows-console
        cp -r XmlDocConverterConsole/bin/Release/net7.0/win-x64/publish/* release/windows-console/
        mv release/windows-console release/XML_Documentation_Converter-${TAG_NAME}-win-console
        cd release
        zip -r XML_Documentation_Converter-${TAG_NAME}-win-console.zip XML_Documentation_Converter-${TAG_NAME}-win-console
        cd ..

        # Linux
        mkdir -p release/linux
        cp -r XmlDocConverterConsole/bin/Release/net7.0/linux-x64/publish/* release/linux/
        mv release/linux release/XML_Documentation_Converter-${TAG_NAME}-linux
        cd release
        zip -r XML_Documentation_Converter-${TAG_NAME}-linux.zip XML_Documentation_Converter-${TAG_NAME}-linux
        cd ..

        # macOS
        mkdir -p release/macos
        cp -r XmlDocConverterConsole/bin/Release/net7.0/osx-x64/publish/* release/macos/
        mv release/macos release/XML_Documentation_Converter-${TAG_NAME}-macos
        cd release
        zip -r XML_Documentation_Converter-${TAG_NAME}-macos.zip XML_Documentation_Converter-${TAG_NAME}-macos
        cd ..

    - name: Debug - List Root Directory
      run: ls -l

    - name: Debug - List Release Directory
      run: ls -l release

    - name: Upload Release Assets (Windows WPF)
      uses: actions/upload-artifact@v2
      with:
        name: windows-wpf-release
        path: release/XML_Documentation_Converter-${{ github.ref_name }}-win-wpf.zip

    - name: Upload Release Assets (Windows Console)
      uses: actions/upload-artifact@v2
      with:
        name: windows-console-release
        path: release/XML_Documentation_Converter-${{ github.ref_name }}-win-console.zip

    - name: Upload Release Assets (Linux)
      uses: actions/upload-artifact@v2
      with:
        name: linux-release
        path: release/XML_Documentation_Converter-${{ github.ref_name }}-linux.zip

    - name: Upload Release Assets (macOS)
      uses: actions/upload-artifact@v2
      with:
        name: macos-release
        path: release/XML_Documentation_Converter-${{ github.ref_name }}-macos.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Release Assets (Windows WPF)
      uses: actions/download-artifact@v2
      with:
        name: windows-wpf-release
        path: ./release

    - name: Download Release Assets (Windows Console)
      uses: actions/download-artifact@v2
      with:
        name: windows-console-release
        path: ./release

    - name: Download Release Assets (Linux)
      uses: actions/download-artifact@v2
      with:
        name: linux-release
        path: ./release

    - name: Download Release Assets (macOS)
      uses: actions/download-artifact@v2
      with:
        name: macos-release
        path: ./release

    - name: Debug - List Downloaded Artifacts
      run: ls -l release

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/XML_Documentation_Converter-${{ github.ref_name }}-win-wpf.zip
          release/XML_Documentation_Converter-${{ github.ref_name }}-win-console.zip
          release/XML_Documentation_Converter-${{ github.ref_name }}-linux.zip
          release/XML_Documentation_Converter-${{ github.ref_name }}-macos.zip
        name: ${{ github.ref_name }} XML Documentation Converter 
        body_path: ChangeLogs/${{ github.ref_name }}.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
