<?xml version="1.0"?>
<doc>
  <assembly>
    <name>XML Doc Converter Start</name>
  </assembly>
  <members>
    <member name="T:TaggedLibrary.Math1">
      <summary>
        The main <c>Math1</c> class.
        Contains all methods for performing basic Math1 functions.
        <list type="bullet">
          <item>
            <term>Add</term>
            <description>Addition Operation</description>
          </item>
          <item>
            <term>Subtract</term>
            <description>Subtraction Operation</description>
          </item>
          <item>
            <term>Multiply</term>
            <description>Multiplication Operation</description>
          </item>
          <item>
            <term>Divide</term>
            <description>Division Operation</description>
          </item>
        </list>
      </summary>
      <remarks>
        <para>
          This class can add, subtract, multiply and divide.
        </para>
        <para>
          These operations can be performed on both
          integers and doubles.
        </para>
      </remarks>
    </member>
    <member name="M:TaggedLibrary.Math1.Add(System.Int32,System.Int32)">
      <summary>
        Adds two integers <paramref name="a"/> and <paramref name="b"/>
        and returns the result.
      </summary>
      <returns>
        The sum of two integers.
      </returns>
      <example>
        <code>
          int c = Math1.Add(4, 5);
          if (c > 10)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.OverflowException">
        Thrown when one parameter is <see cref="F:System.Int32.MaxValue"/> and the other
        is greater than 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math1.Add(System.Double,System.Double)"/> to add doubles.
      <seealso cref="M:TaggedLibrary.Math1.Subtract(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Multiply(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Divide(System.Int32,System.Int32)"/>
      <param name="a">An integer.</param>
      <param name="b">An integer.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Add(System.Double,System.Double)">
      <summary>
        Adds two doubles <paramref name="a"/> and <paramref name="b"/>
        and returns the result.
      </summary>
      <returns>
        The sum of two doubles.
      </returns>
      <example>
        <code>
          double c = Math1.Add(4.5, 5.4);
          if (c > 10)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.OverflowException">
        Thrown when one parameter is max and the other
        is greater than 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math1.Add(System.Int32,System.Int32)"/> to add integers.
      <seealso cref="M:TaggedLibrary.Math1.Subtract(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Multiply(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Divide(System.Double,System.Double)"/>
      <param name="a">A double precision number.</param>
      <param name="b">A double precision number.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Subtract(System.Int32,System.Int32)">
      <summary>
        Subtracts <paramref name="b"/> from <paramref name="a"/>
        and returns the result.
      </summary>
      <returns>
        The difference between two integers.
      </returns>
      <example>
        <code>
          int c = Math1.Subtract(4, 5);
          if (c > 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math1.Subtract(System.Double,System.Double)"/> to subtract doubles.
      <seealso cref="M:TaggedLibrary.Math1.Add(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Multiply(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Divide(System.Int32,System.Int32)"/>
      <param name="a">An integer.</param>
      <param name="b">An integer.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Subtract(System.Double,System.Double)">
      <summary>
        Subtracts a double <paramref name="b"/> from another
        double <paramref name="a"/> and returns the result.
      </summary>
      <returns>
        The difference between two doubles.
      </returns>
      <example>
        <code>
          double c = Math1.Subtract(4.5, 5.4);
          if (c > 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math1.Subtract(System.Int32,System.Int32)"/> to subtract integers.
      <seealso cref="M:TaggedLibrary.Math1.Add(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Multiply(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Divide(System.Double,System.Double)"/>
      <param name="a">A double precision number.</param>
      <param name="b">A double precision number.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Multiply(System.Int32,System.Int32)">
      <summary>
        Multiplies two integers <paramref name="a"/>
        and <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The product of two integers.
      </returns>
      <example>
        <code>
          int c = Math1.Multiply(4, 5);
          if (c > 100)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math1.Multiply(System.Double,System.Double)"/> to multiply doubles.
      <seealso cref="M:TaggedLibrary.Math1.Add(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Subtract(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Divide(System.Int32,System.Int32)"/>
      <param name="a">An integer.</param>
      <param name="b">An integer.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Multiply(System.Double,System.Double)">
      <summary>
        Multiplies two doubles <paramref name="a"/> and
        <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The product of two doubles.
      </returns>
      <example>
        <code>
          double c = Math1.Multiply(4.5, 5.4);
          if (c > 100.0)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math1.Multiply(System.Int32,System.Int32)"/> to multiply integers.
      <seealso cref="M:TaggedLibrary.Math1.Add(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Subtract(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Divide(System.Double,System.Double)"/>
      <param name="a">A double precision number.</param>
      <param name="b">A double precision number.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Divide(System.Int32,System.Int32)">
      <summary>
        Divides an integer <paramref name="a"/> by another
        integer <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The quotient of two integers.
      </returns>
      <example>
        <code>
          int c = Math1.Divide(4, 5);
          if (c > 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.DivideByZeroException">
        Thrown when <paramref name="b"/> is equal to 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math1.Divide(System.Double,System.Double)"/> to divide doubles.
      <seealso cref="M:TaggedLibrary.Math1.Add(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Subtract(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math1.Multiply(System.Int32,System.Int32)"/>
      <param name="a">An integer dividend.</param>
      <param name="b">An integer divisor.</param>
    </member>
    <member name="M:TaggedLibrary.Math1.Divide(System.Double,System.Double)">
      <summary>
        Divides a double <paramref name="a"/> by another double
        <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The quotient of two doubles.
      </returns>
      <example>
        <code>
          double c = Math1.Divide(4.5, 5.4);
          if (c > 1.0)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.DivideByZeroException">
        Thrown when <paramref name="b"/> is equal to 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math1.Divide(System.Int32,System.Int32)"/> to divide integers.
      <seealso cref="M:TaggedLibrary.Math1.Add(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Subtract(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math1.Multiply(System.Double,System.Double)"/>
      <param name="a">A double precision dividend.</param>
      <param name="b">A double precision divisor.</param>
    </member>
    <member name="T:TaggedLibrary.Math">
      <summary>
        The main <c>Math</c> class.
        Contains all methods for performing basic math functions.
        <list type="bullet">
          <item>
            <term>Add</term>
            <description>Addition Operation</description>
          </item>
          <item>
            <term>Subtract</term>
            <description>Subtraction Operation</description>
          </item>
          <item>
            <term>Multiply</term>
            <description>Multiplication Operation</description>
          </item>
          <item>
            <term>Divide</term>
            <description>Division Operation</description>
          </item>
        </list>
      </summary>
      <remarks>
        <para>
          This class can add, subtract, multiply and divide.
        </para>
        <para>
          These operations can be performed on both
          integers and doubles.
        </para>
      </remarks>
    </member>
    <member name="M:TaggedLibrary.Math.Add(System.Int32,System.Int32)">
      <summary>
        Adds two integers <paramref name="a"/> and <paramref name="b"/>
        and returns the result.
      </summary>
      <returns>
        The sum of two integers.
      </returns>
      <example>
        <code>
          int c = Math.Add(4, 5);
          if (c > 10)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.OverflowException">
        Thrown when one parameter is <see cref="F:System.Int32.MaxValue"/> and the other
        is greater than 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math.Add(System.Double,System.Double)"/> to add doubles.
      <seealso cref="M:TaggedLibrary.Math.Subtract(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Multiply(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Divide(System.Int32,System.Int32)"/>
      <param name="a">An integer.</param>
      <param name="b">An integer.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Add(System.Double,System.Double)">
      <summary>
        Adds two doubles <paramref name="a"/> and <paramref name="b"/>
        and returns the result.
      </summary>
      <returns>
        The sum of two doubles.
      </returns>
      <example>
        <code>
          double c = Math.Add(4.5, 5.4);
          if (c > 10)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.OverflowException">
        Thrown when one parameter is max and the other
        is greater than 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math.Add(System.Int32,System.Int32)"/> to add integers.
      <seealso cref="M:TaggedLibrary.Math.Subtract(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Multiply(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Divide(System.Double,System.Double)"/>
      <param name="a">A double precision number.</param>
      <param name="b">A double precision number.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Subtract(System.Int32,System.Int32)">
      <summary>
        Subtracts <paramref name="b"/> from <paramref name="a"/>
        and returns the result.
      </summary>
      <returns>
        The difference between two integers.
      </returns>
      <example>
        <code>
          int c = Math.Subtract(4, 5);
          if (c > 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math.Subtract(System.Double,System.Double)"/> to subtract doubles.
      <seealso cref="M:TaggedLibrary.Math.Add(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Multiply(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Divide(System.Int32,System.Int32)"/>
      <param name="a">An integer.</param>
      <param name="b">An integer.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Subtract(System.Double,System.Double)">
      <summary>
        Subtracts a double <paramref name="b"/> from another
        double <paramref name="a"/> and returns the result.
      </summary>
      <returns>
        The difference between two doubles.
      </returns>
      <example>
        <code>
          double c = Math.Subtract(4.5, 5.4);
          if (c > 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math.Subtract(System.Int32,System.Int32)"/> to subtract integers.
      <seealso cref="M:TaggedLibrary.Math.Add(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Multiply(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Divide(System.Double,System.Double)"/>
      <param name="a">A double precision number.</param>
      <param name="b">A double precision number.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Multiply(System.Int32,System.Int32)">
      <summary>
        Multiplies two integers <paramref name="a"/>
        and <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The product of two integers.
      </returns>
      <example>
        <code>
          int c = Math.Multiply(4, 5);
          if (c > 100)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math.Multiply(System.Double,System.Double)"/> to multiply doubles.
      <seealso cref="M:TaggedLibrary.Math.Add(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Subtract(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Divide(System.Int32,System.Int32)"/>
      <param name="a">An integer.</param>
      <param name="b">An integer.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Multiply(System.Double,System.Double)">
      <summary>
        Multiplies two doubles <paramref name="a"/> and
        <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The product of two doubles.
      </returns>
      <example>
        <code>
          double c = Math.Multiply(4.5, 5.4);
          if (c > 100.0)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      See <see cref="M:TaggedLibrary.Math.Multiply(System.Int32,System.Int32)"/> to multiply integers.
      <seealso cref="M:TaggedLibrary.Math.Add(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Subtract(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Divide(System.Double,System.Double)"/>
      <param name="a">A double precision number.</param>
      <param name="b">A double precision number.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Divide(System.Int32,System.Int32)">
      <summary>
        Divides an integer <paramref name="a"/> by another
        integer <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The quotient of two integers.
      </returns>
      <example>
        <code>
          int c = Math.Divide(4, 5);
          if (c > 1)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.DivideByZeroException">
        Thrown when <paramref name="b"/> is equal to 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math.Divide(System.Double,System.Double)"/> to divide doubles.
      <seealso cref="M:TaggedLibrary.Math.Add(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Subtract(System.Int32,System.Int32)"/>
      <seealso cref="M:TaggedLibrary.Math.Multiply(System.Int32,System.Int32)"/>
      <param name="a">An integer dividend.</param>
      <param name="b">An integer divisor.</param>
    </member>
    <member name="M:TaggedLibrary.Math.Divide(System.Double,System.Double)">
      <summary>
        Divides a double <paramref name="a"/> by another double
        <paramref name="b"/> and returns the result.
      </summary>
      <returns>
        The quotient of two doubles.
      </returns>
      <example>
        <code>
          double c = Math.Divide(4.5, 5.4);
          if (c > 1.0)
          {
          Console.WriteLine(c);
          }
        </code>
      </example>
      <exception cref="T:System.DivideByZeroException">
        Thrown when <paramref name="b"/> is equal to 0.
      </exception>
      See <see cref="M:TaggedLibrary.Math.Divide(System.Int32,System.Int32)"/> to divide integers.
      <seealso cref="M:TaggedLibrary.Math.Add(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Subtract(System.Double,System.Double)"/>
      <seealso cref="M:TaggedLibrary.Math.Multiply(System.Double,System.Double)"/>
      <param name="a">A double precision dividend.</param>
      <param name="b">A double precision divisor.</param>
    </member>
  </members>
</doc>